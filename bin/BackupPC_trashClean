#!/usr/bin/perl
#============================================================= -*-perl-*-
#
# BackupPC_trashClean: remove all the files in $TopDir/trash.
#
# DESCRIPTION
#   BackupPC_trashClean is started once by BackupPC.  Every 5 minutes
#   it wakes up and removes all the files or directories in $TopDir/trash.
#   
# AUTHOR
#   Craig Barratt  <cbarratt@users.sourceforge.net>
#
# COPYRIGHT
#   Copyright (C) 2001-2015  Craig Barratt
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#========================================================================
#
# Version 3.3.1, released 11 Jan 2015.
#
# See http://backuppc.sourceforge.net.
#
#========================================================================

use strict;
no  utf8;
use lib "__INSTALLDIR__/lib";
use BackupPC::Lib;

die("BackupPC::Lib->new failed\n") if ( !(my $bpc = BackupPC::Lib->new) );
my $TopDir = $bpc->TopDir();
my $BinDir = $bpc->BinDir();
my %Conf   = $bpc->Conf();

$bpc->ChildInit();

###########################################################################
# Empty trash every so often (eg: every 5 minutes)
###########################################################################
while ( 1 ) {
    print("processState running\n");
    if ( $bpc->RmTreeTrashEmpty("$TopDir/trash") < 0 ) {
	print("log BackupPC_trashClean failed to empty $TopDir/trash\n");
    }
    print("processState idle\n");
    sleep($Conf{TrashCleanSleepSec} || 300);
}
